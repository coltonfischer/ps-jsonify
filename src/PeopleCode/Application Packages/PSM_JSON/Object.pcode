import PSM_JSON:*;
import PSM_JSON:TYPE:*;
import PSM_JSON:EVALUATOR:*;

class Object
   method Object();
   
   /* Generator Methods */
   method FromJsonObject(&poJson As JsonObject);
   method FromJsonString(&psJson As string);
   
   /* Builder Methods */
   method AddArray(&psName As string, &paValue As array);
   method AddBoolean(&psName As string, &paValue As boolean);
   method AddClass(&psName As string, &paValue As object);
   method AddCookie(&psName As string, &paValue As Cookie);
   method AddDate(&psName As string, &paValue As date);
   method AddDateTime(&psName As string, &paValue As datetime);
   method AddFloat(&psName As string, &paValue As float);
   method AddHash(&psName As string, &paValue As Hash);
   method AddInteger(&psName As string, &paValue As integer);
   method AddJsonArray(&psName As string, &paValue As JsonArray);
   method AddJsonNode(&psName As string, &paValue As JsonNode);
   method AddJsonObject(&psName As string, &paValue As JsonObject);
   method AddJsonValue(&psName As string, &paValue As JsonValue);
   method AddNull(&psName As string);
   method AddNumber(&psName As string, &paValue As number);
   method AddObject(&psName As string, &paValue As object);
   method AddProperty(&psName As string, &paValue As any);
   method AddRecord(&psName As string, &paValue As Record);
   method AddResponse(&psName As string, &paValue As Response);
   method AddRequest(&psName As string, &paValue As Request);
   method AddRow(&psName As string, &paValue As Row);
   method AddRowset(&psName As string, &paValue As Rowset);
   method AddString(&psName As string, &paValue As string);
   method AddTime(&psName As string, &paValue As time);
   
   /* Parser Methods */
   method GetProperty(&psName As string) Returns any;
   method GetWithDefault(&psName As string, &paDefault As any) Returns any;
   method GetJsonNode(&psName As string) Returns JsonNode;
   method GetPropertyNameAt(&piIndex As integer) Returns string;
   method GetPropertyAt(&piIndex As integer) Returns any;
   method GetJsonNodeAt(&piIndex As integer) Returns JsonNode;
   
   /* Converter Methods */
   method ToJsonObject() Returns JsonObject;
   method ToJsonString() Returns string;
   
   /* Informer Methods */
   method HasKey(&psName As string) Returns boolean;
   method IsNull(&psName As string) Returns boolean;
   property integer Size get;
   
private
   instance JsonObject &mjoJsonObject;
   instance PSM_JSON:Node &moJsonNode;
end-class;


method Object
   %This.FromJsonObject(CreateJsonObject());
end-method;


method FromJsonObject
   /+ &poJson as JsonObject +/
   &mjoJsonObject = &poJson;
end-method;


method FromJsonString
   /+ &psJson as String +/
   
   Local JsonParser &jpParser = CreateJsonParser();
   If Not &jpParser.Parse(&psJson) Then
      throw CreateException(0, 0, "Error Parsing JSON - Code: " | &jpParser.GetParseError());
   End-If;
   %This.FromJsonObject(&jpParser.GetRootObject());
   
end-method;


method AddArray
   /+ &psName as String, +/
   /+ &paValue as Array of Any +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetArray(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddBoolean
   /+ &psName as String, +/
   /+ &paValue as Boolean +/
   &mjoJsonObject.AddProperty(&psName, &paValue);
end-method;


method AddClass
   /+ &psName as String, +/
   /+ &paValue as Object +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetClass(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddCookie
   /+ &psName as String, +/
   /+ &paValue as Cookie +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetCookie(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddDate
   /+ &psName as String, +/
   /+ &paValue as Date +/
   &mjoJsonObject.AddProperty(&psName, &paValue);
end-method;


method AddDateTime
   /+ &psName as String, +/
   /+ &paValue as DateTime +/
   &mjoJsonObject.AddProperty(&psName, &paValue);
end-method;


method AddFloat
   /+ &psName as String, +/
   /+ &paValue as Float +/
   &mjoJsonObject.AddProperty(&psName, &paValue);
end-method;


method AddHash
   /+ &psName as String, +/
   /+ &paValue as Hash +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetHash(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddInteger
   /+ &psName as String, +/
   /+ &paValue as Integer +/
   &mjoJsonObject.AddProperty(&psName, &paValue);
end-method;


method AddJsonArray
   /+ &psName as String, +/
   /+ &paValue as JsonArray +/
   &mjoJsonObject.AddJsonArray(&psName, &paValue);
end-method;


method AddJsonNode
   /+ &psName as String, +/
   /+ &paValue as JsonNode +/
   
   If &paValue.IsJsonObject() Then
      %This.AddJsonObject(&psName, &paValue.GetJsonObject());
      Return;
   End-If;
   
   If &paValue.IsJsonArray() Then
      %This.AddJsonArray(&psName, &paValue.GetJsonArray());
      Return;
   End-If;
   
   If &paValue.IsJsonValue() Then
      %This.AddJsonValue(&psName, &paValue.GetJsonValue());
      Return;
   End-If;
   
   If &paValue.IsNull() Then
      %This.AddNull(&psName);
      Return;
   End-If;
   
end-method;


method AddJsonObject
   /+ &psName as String, +/
   /+ &paValue as JsonObject +/
   &mjoJsonObject.AddJsonObject(&psName, &paValue);
end-method;


method AddJsonValue
   /+ &psName as String, +/
   /+ &paValue as JsonValue +/
   
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetJsonValue(&paValue);
   
   If (&paValue.ValueType = 7) Then
      %This.AddNull(&psName);
      Return;
   End-If;
   
   &mjoJsonObject.AddProperty(&psName, &paValue.GetValue());
   
end-method;


method AddNull
   /+ &psName as String +/
   
   &mjoJsonObject.AddProperty(&psName, "");
   Local JsonNode &currentNode = &mjoJsonObject.GetJsonNode(&psName);
   
   &currentNode.SetNull();
   &currentNode.SetNodeName(&psName);
   
end-method;


method AddNumber
   /+ &psName as String, +/
   /+ &paValue as Number +/
   &mjoJsonObject.AddProperty(&psName, &paValue);
end-method;


method AddObject
   /+ &psName as String, +/
   /+ &paValue as Object +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetObject(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddProperty
   /+ &psName as String, +/
   /+ &paValue as Any +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetValue(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddRecord
   /+ &psName as String, +/
   /+ &paValue as Record +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetRecord(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddResponse
   /+ &psName as String, +/
   /+ &paValue as Response +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetResponse(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddRequest
   /+ &psName as String, +/
   /+ &paValue as Request +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetRequest(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddRow
   /+ &psName as String, +/
   /+ &paValue as Row +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetRow(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddRowset
   /+ &psName as String, +/
   /+ &paValue as Rowset +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetRowset(&paValue);
   %This.AddJsonNode(&psName, &moJsonNode);
end-method;


method AddString
   /+ &psName as String, +/
   /+ &paValue as String +/
   &moJsonNode = create PSM_JSON:Node();
   &moJsonNode.SetString(&paValue);
   &mjoJsonObject.AddProperty(&psName, &moJsonNode.GetString());
end-method;


method AddTime
   /+ &psName as String, +/
   /+ &paValue as Time +/
   &mjoJsonObject.AddProperty(&psName, &paValue);
end-method;


method GetProperty
   /+ &psName as String +/
   /+ Returns Any +/
   Return &mjoJsonObject.GetProperty(&psName);
end-method;


method GetWithDefault
   /+ &psName as String, +/
   /+ &paDefault as Any +/
   /+ Returns Any +/
   If Not %This.HasKey(&psName) Then
      Return &paDefault;
   End-If;
   Return %This.GetProperty(&psName);
end-method;


method GetJsonNode
   /+ &psName as String +/
   /+ Returns JsonNode +/
   Return &mjoJsonObject.GetJsonNode(&psName);
end-method;


method GetPropertyNameAt
   /+ &piIndex as Integer +/
   /+ Returns String +/
   Return &mjoJsonObject.GetPropertyNameAt(&piIndex);
end-method;


method GetPropertyAt
   /+ &piIndex as Integer +/
   /+ Returns Any +/
   Return %This.GetProperty(%This.GetPropertyNameAt(&piIndex));
end-method;


method GetJsonNodeAt
   /+ &piIndex as Integer +/
   /+ Returns JsonNode +/
   Return %This.GetJsonNode(%This.GetPropertyNameAt(&piIndex));
end-method;


method HasKey
   /+ &psName as String +/
   /+ Returns Boolean +/
   Return &mjoJsonObject.IsExist(&psName);
end-method;


method IsNull
   /+ &psName as String +/
   /+ Returns Boolean +/
   rem Return &mjoJsonObject.IsNullProperty(&psName); /* Not working in 8.56.12 */
   Return ( Not %This.HasKey(&psName) Or
      %This.GetJsonNode(&psName).ValueType = 7);
end-method;


method ToJsonObject
   /+ Returns JsonObject +/
   Return &mjoJsonObject;
end-method;


method ToJsonString
   /+ Returns String +/
   Return &mjoJsonObject.ToString();
end-method;

get Size
   /+ Returns Integer +/
   Return &mjoJsonObject.GetChildCount();
end-get;