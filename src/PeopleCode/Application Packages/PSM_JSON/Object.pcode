import PSM_JSON:Node;
import PSM_JSON:TYPE:*;

class Object
   property JsonObject Value;
   
   method Object();
   method AddProperty(&psName As string, &paValue As any);
   method AddString(&psName As string, &paValue As string);
   method AddNumber(&psName As string, &paValue As number);
   method AddBoolean(&psName As string, &paValue As boolean);
   method AddNull(&psName As string);
   method AddArray(&psName As string, &paValue As array);
   method AddJsonValue(&psName As string, &paValue As JsonValue);
   method AddJsonNode(&psName As string, &paValue As JsonNode);
   method AddJsonArray(&psName As string, &paValue As JsonArray);
   method AddResponse(&psName As string, &paValue As Response);
   method AddCookie(&psName As string, &paValue As Cookie);
   method AddRecord(&psName As string, &paValue As Record);
   method AddRow(&psName As string, &paValue As Row);
   method AddRowSet(&psName As string, &paValue As Rowset);
   method Has(&psName As string) Returns boolean;
   method ToString() Returns string;
end-class;

method Object
   %This.Value = CreateJsonObject();
end-method;

method AddProperty
   /+ &psName as String, +/
   /+ &paValue as Any +/
   
   Local PSM_JSON:Node &oAny = create PSM_JSON:Node(&paValue);
   
   If &oAny.IsJsonObject() Then
      %This.Value.AddJsonObject(&psName, &oAny.Value);
      Return;
   End-If;
   
   If &oAny.IsJsonArray() Then
      %This.Value.AddJsonArray(&psName, &oAny.Value);
      Return;
   End-If;
   
   If &oAny.IsNull() Then
      %This.AddNull(&psName);
      Return;
   End-If;
   
   %This.Value.AddProperty(&psName, &oAny.Value);
   
end-method;


method AddString
   /+ &psName as String, +/
   /+ &paValue as String +/
   %This.Value.AddProperty(&psName, EscapeJavascriptString(&paValue));
end-method;


method AddNumber
   /+ &psName as String, +/
   /+ &paValue as Number +/
   %This.Value.AddProperty(&psName, &paValue);
end-method;


method AddBoolean
   /+ &psName as String, +/
   /+ &paValue as Boolean +/
   %This.Value.AddProperty(&psName, &paValue);
end-method;


method AddNull
   /+ &psName as String +/
   
   %This.AddProperty(&psName, "");
   Local JsonNode &currentNode = %This.Value.GetJsonNode(&psName);
   
   &currentNode.SetNull();
   &currentNode.SetNodeName(&psName);
   
end-method;


method AddResponse
   /+ &psName as String, +/
   /+ &paValue as Response +/
   Local JsonNode &jnJson = CreateJsonNode();
   Local PSM_JSON:TYPE:Response &oType = create PSM_JSON:TYPE:Response(&paValue, &jnJson);
   %This.Value.AddJsonObject(&psName, &jnJson.GetJsonObject());
end-method;


method AddCookie
   /+ &psName as String, +/
   /+ &paValue as Cookie +/
   Local JsonNode &jnJson = CreateJsonNode();
   Local PSM_JSON:TYPE:Cookie &oType = create PSM_JSON:TYPE:Cookie(&paValue, &jnJson);
   %This.Value.AddJsonObject(&psName, &jnJson.GetJsonObject());
end-method;


method AddRecord
   /+ &psName as String, +/
   /+ &paValue as Record +/
   
   Local JsonNode &jnJson = CreateJsonNode();
   Local PSM_JSON:TYPE:Record &oType = create PSM_JSON:TYPE:Record(&paValue, &jnJson);
   %This.Value.AddJsonObject(&psName, &jnJson.GetJsonObject());
   
end-method;


method AddRow
   /+ &psName as String, +/
   /+ &paValue as Row +/
   
   Local JsonNode &jnJson = CreateJsonNode();
   Local PSM_JSON:TYPE:Row &oType = create PSM_JSON:TYPE:Row(&paValue, &jnJson);
   %This.Value.AddJsonObject(&psName, &jnJson.GetJsonObject());
   
end-method;


method AddRowSet
   /+ &psName as String, +/
   /+ &paValue as Rowset +/
   
   Local JsonNode &jnJson = CreateJsonNode();
   Local PSM_JSON:TYPE:Rowset &oType = create PSM_JSON:TYPE:Rowset(&paValue, &jnJson);
   %This.Value.AddJsonArray(&psName, &jnJson.GetJsonArray());
   
end-method;


method AddJsonValue
   /+ &psName as String, +/
   /+ &paValue as JsonValue +/
   
   Evaluate &paValue.ValueType
   When 6 /* String */
      %This.AddString(&psName, &paValue.GetString());
      Break;
   When 5 /* Boolean */
      %This.Value.AddProperty(&psName, &paValue.GetBoolean());
      Break;
   When 1 /* Integer */
      %This.Value.AddProperty(&psName, &paValue.GetInteger());
      Break;
   When 3 /* Number, Float */
      %This.Value.AddProperty(&psName, &paValue.GetValue());
      Break;
   When 7 /* Null */
      %This.AddNull(&psName);
      Break;
   When 8 /* Date */
      %This.Value.AddProperty(&psName, &paValue.GetDate());
      Break;
   When 9 /* Time */
      %This.Value.AddProperty(&psName, &paValue.GetTime());
      Break;
   When 10 /*DateTime */
      %This.Value.AddProperty(&psName, &paValue.GetDateTime());
      Break;
   When-Other
      %This.Value.AddProperty(&psName, &paValue.GetValue());
   End-Evaluate;
   
end-method;


method AddJsonNode
   /+ &psName as String, +/
   /+ &paValue as JsonNode +/
   
   If &paValue.IsJsonObject() Then
      %This.Value.AddJsonObject(&psName, &paValue.GetJsonObject());
      Return;
   End-If;
   
   If &paValue.IsJsonArray() Then
      %This.Value.AddJsonArray(&psName, &paValue.GetJsonArray());
      Return;
   End-If;
   
   Evaluate &paValue.ValueType
   When 6 /* String */
      %This.AddString(&psName, &paValue.GetString());
      Break;
   When 5 /* Boolean */
      %This.Value.AddProperty(&psName, &paValue.GetBoolean());
      Break;
   When 1 /* Integer */
      %This.Value.AddProperty(&psName, &paValue.GetInteger());
      Break;
   When 3 /* Number, Float */
      %This.Value.AddProperty(&psName, &paValue.GetNumber());
      Break;
   When 7 /* Null */
      %This.AddNull(&psName);
      Break;
   When 8 /* Date */
      %This.Value.AddProperty(&psName, &paValue.GetDate());
      Break;
   When 9 /* Time */
      %This.Value.AddProperty(&psName, &paValue.GetTime());
      Break;
   When 10 /*DateTime */
      %This.Value.AddProperty(&psName, &paValue.GetDateTime());
      Break;
   When-Other
      rem %This.Value.AddProperty(&psName, &paValue.GetValue());
      Return;
   End-Evaluate;
   
   <*
   If &paValue.IsJsonValue() Then
      %This.AddJsonValue(&psName, &paValue.GetJsonValue());
      Return;
   End-If;
   *>
   
   
   
   If &paValue.IsNull() Then
      %This.AddNull(&psName);
      Return;
   End-If;
   
   /* Try to add via AddJsonValue */
   rem %This.Value.AddProperty(&psName, &paValue.GetJsonValue());
   
end-method;


method AddJsonArray
   /+ &psName as String, +/
   /+ &paValue as JsonArray +/
   %This.Value.AddJsonArray(&psName, &paValue);
end-method;


method AddArray
   /+ &psName as String, +/
   /+ &paValue as Array of Any +/
   
end-method;


method Has
   /+ &psName as String +/
   /+ Returns Boolean +/
   Return %This.Value.IsExist(&psName);
end-method;

method ToString
   /+ Returns String +/
   Return %This.Value.ToString();
end-method;