import PSM_JSON:Array;
import PSM_JSON:Object;

class Hash
   method Hash(&poValue As any, &pjnJson As JsonNode);
private
   method Process();
   instance Hash &moValue;
   instance PSM_JSON:Array &mjaJson;
end-class;

method Hash
   /+ &poValue as Any, +/
   /+ &pjnJson as JsonNode +/
   
   Local JsonArray &jaJson = &pjnJson.GetJsonArray();
   
   If &jaJson = Null Then
      &jaJson = CreateJsonArray();
      &pjnJson.SetJsonArray(&jaJson);
   End-If;
   
   &mjaJson = create PSM_JSON:Array();
   &mjaJson.FromJsonArray(&jaJson);
   &moValue = &poValue;
   
   %This.Process();
   
end-method;


method Process
   
   Local string &sKey;
   Local any &aValue;
   
   &moValue.IterStart();
   While &moValue.IterNext(&sKey, &aValue)
      
      Local PSM_JSON:Object &joItem = create PSM_JSON:Object();
      &joItem.AddProperty(&sKey, &aValue);
      
      &mjaJson.AddJsonObject(&joItem.ToJsonObject());
      
   End-While;
   
end-method;